<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on 発火後忘失</title>
    <link>https://yukihane.github.io/tags/javascript/</link>
    <description>Recent content in Javascript on 発火後忘失</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Sat, 10 Jul 2021 23:53:20 +0000</lastBuildDate>
    <atom:link href="https://yukihane.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spring BootとTypeScriptで開発するためのプロジェクト設定(Gradle) - Polyfillも必要とする場合</title>
      <link>https://yukihane.github.io/blog/202107/11/spring-boot-with-babel/</link>
      <pubDate>Sat, 10 Jul 2021 23:53:20 +0000</pubDate>
      <guid>https://yukihane.github.io/blog/202107/11/spring-boot-with-babel/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_はじめに&#34;&gt;はじめに&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://yukihane.github.io/blog/202107/10/spring-boot-with-typescript/&#34;&gt;前回&lt;/a&gt; は &lt;code&gt;ts-loader&lt;/code&gt; を用いて TypeScript をビルドしました。&lt;/p&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;簡潔にセットアップできたのは良いのですが、実際にはPolyfillを行いたいので &lt;code&gt;babel-loader&lt;/code&gt; をベースに再構築することにします。また、自動テスト( &lt;code&gt;jest&lt;/code&gt; )も導入します。&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Spring BootとTypeScriptで開発するためのプロジェクト設定(Gradle)</title>
      <link>https://yukihane.github.io/blog/202107/10/spring-boot-with-typescript/</link>
      <pubDate>Fri, 09 Jul 2021 22:54:04 +0000</pubDate>
      <guid>https://yukihane.github.io/blog/202107/10/spring-boot-with-typescript/</guid>
      <description>&lt;div class=&#34;sect1&#34;&gt;&#xA;&lt;h2 id=&#34;_はじめに&#34;&gt;はじめに&lt;/h2&gt;&#xA;&lt;div class=&#34;sectionbody&#34;&gt;&#xA;&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;Spring Boot で JavaScript を扱うときは素のJSをhtml(Thymeleafテンプレート)に &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; タグで埋め込む、というのが多分一般的で手っ取り早い方法かと思います。&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>formで(送信ボタンを押さずに)エンターキーで送信する</title>
      <link>https://yukihane.github.io/blog/202103/21/implicit-submission/</link>
      <pubDate>Sun, 21 Mar 2021 09:54:35 +0000</pubDate>
      <guid>https://yukihane.github.io/blog/202103/21/implicit-submission/</guid>
      <description>&lt;div class=&#34;paragraph&#34;&gt;&#xA;&lt;p&gt;入力フォームに値を入力して、(送信ボタンを押すのではなく)入力フィールド内でエンターキーを押すと送信される機能、&amp;#34;Implicit Submission&amp;#34;(日本語にすると&amp;#34;暗黙的送信&amp;#34;ですかね？)というそうです。&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Electronでfs(File IO)</title>
      <link>https://yukihane.github.io/blog/202004/22/electron-fileio/</link>
      <pubDate>Wed, 22 Apr 2020 20:59:12 +0000</pubDate>
      <guid>https://yukihane.github.io/blog/202004/22/electron-fileio/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://qiita.com/zaburo/items/eb525138b88890c5357c&#34;&gt;Electron で File の Open と Save - Qiita&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;を写経させてもらっていますが、、、動かない。&lt;br /&gt;&#xA;リンク先では Electron v4.x を利用していますが現在の最新版は &lt;a href=&#34;https://www.electronjs.org/releases/stable#release-notes-for-v823&#34;&gt;v8.2.3&lt;/a&gt;。このバージョン差異が原因のようでした。&lt;/p&gt;&#xA;&lt;h1 id=&#34;問題&#34;&gt;問題&lt;/h1&gt;&#xA;&lt;h2 id=&#34;1-uncaught-referenceerror-require-is-not-defined&#34;&gt;1. Uncaught ReferenceError: require is not defined&lt;/h2&gt;&#xA;&lt;p&gt;v8.2.3 でそのまま実行すると、表題のエラーが出ています。&lt;br /&gt;&#xA;&lt;a href=&#34;https://www.electronjs.org/releases/stable?version=5&amp;amp;page=3#release-notes-for-v500&#34;&gt;v5.0.0&lt;/a&gt;(&lt;a href=&#34;https://github.com/electron/electron/pull/16235&#34;&gt;#16235&lt;/a&gt;)より &lt;code&gt;nodeIntegration&lt;/code&gt; 設定のデフォルト値が &lt;code&gt;false&lt;/code&gt; に変わったためのようです。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
